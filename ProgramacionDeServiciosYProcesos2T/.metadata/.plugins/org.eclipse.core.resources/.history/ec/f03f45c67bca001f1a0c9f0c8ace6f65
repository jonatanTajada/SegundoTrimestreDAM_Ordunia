package com.ejemplo.cliente;

import javax.swing.*;
import java.awt.*;

public class VentanaConfiguracion extends JFrame {
	
	private JTextField campoIP;
	private JTextField campoPuerto;
	private JTextField campoNombre;
	
	private boolean aceptado = false;

	//constructor
	public VentanaConfiguracion() {
		super("Configuraciones de la comunicación");
		inicializarComponentes();
	}
	
	// getters
	public boolean isAceptado() {
		return aceptado;
	}

	public String getIP() {
		return campoIP.getText();
	}

	public String getPuerto() {
		return campoPuerto.getText();
	}

	public String getNombre() {
		return campoNombre.getText();
	}


	//metodo inicializar componentes
	private void inicializarComponentes() {
		
		// Configuración general de la ventana
		setLayout(new BorderLayout(10, 10));
		setSize(400, 200); 
		setLocationRelativeTo(null); // Centrar en la pantalla
		setDefaultCloseOperation(EXIT_ON_CLOSE); // Cerrar aplicación al cerrar la ventana

		// Panel central para los campos
		JPanel panelCampos = new JPanel(new GridLayout(3, 2, 10, 10)); // 3 filas, 2 columnas
		panelCampos.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Margen interno

		// Etiquetas y campos
		panelCampos.add(new JLabel("IP del Servidor:", SwingConstants.RIGHT));
		campoIP = new JTextField("127.0.0.1");
		panelCampos.add(campoIP);

		panelCampos.add(new JLabel("Puerto de la conexión:", SwingConstants.RIGHT));
		campoPuerto = new JTextField("10101");
		panelCampos.add(campoPuerto);

		panelCampos.add(new JLabel("Escriba su nombre:", SwingConstants.RIGHT));
		campoNombre = new JTextField();
		panelCampos.add(campoNombre);

		// Añadir el panel de campos al centro
		add(panelCampos, BorderLayout.CENTER);

		// Panel inferior para los botones
		JPanel panelBotones = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		JButton btnOK = new JButton("OK");
		JButton btnCancel = new JButton("Cancel");

		// Acción del botón OK
		btnOK.addActionListener(e -> {
			aceptado = true; // Configuración aceptada
			System.out.println("IP: " + campoIP.getText());
			System.out.println("Puerto: " + campoPuerto.getText());
			System.out.println("Nombre: " + campoNombre.getText());
			dispose(); // Cerrar la ventana
		});

		// Acción del botón Cancel
		btnCancel.addActionListener(e -> {
			aceptado = false; // Configuración no aceptada
			System.out.println("Configuración cancelada.");
			dispose(); // Cerrar la ventana
		});

		panelBotones.add(btnOK);
		panelBotones.add(btnCancel);

		// Añadir el panel de botones al sur
		add(panelBotones, BorderLayout.SOUTH);
	}


	public static void main(String[] args) {
		// Crear la ventana de configuración
		VentanaConfiguracion ventana = new VentanaConfiguracion();

		// Mostrar la ventana
		ventana.setVisible(true);
	}
}
